/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.sableccCarpeta.node;

import srt.sableccCarpeta.analysis.*;

@SuppressWarnings("nls")
public final class AListsubtituloListasubtitulo extends PListasubtitulo
{
    private PSubtitulo _subtitulo_;
    private PListasubtitulo _listasubtitulo_;

    public AListsubtituloListasubtitulo()
    {
        // Constructor
    }

    public AListsubtituloListasubtitulo(
        @SuppressWarnings("hiding") PSubtitulo _subtitulo_,
        @SuppressWarnings("hiding") PListasubtitulo _listasubtitulo_)
    {
        // Constructor
        setSubtitulo(_subtitulo_);

        setListasubtitulo(_listasubtitulo_);

    }

    @Override
    public Object clone()
    {
        return new AListsubtituloListasubtitulo(
            cloneNode(this._subtitulo_),
            cloneNode(this._listasubtitulo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListsubtituloListasubtitulo(this);
    }

    public PSubtitulo getSubtitulo()
    {
        return this._subtitulo_;
    }

    public void setSubtitulo(PSubtitulo node)
    {
        if(this._subtitulo_ != null)
        {
            this._subtitulo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._subtitulo_ = node;
    }

    public PListasubtitulo getListasubtitulo()
    {
        return this._listasubtitulo_;
    }

    public void setListasubtitulo(PListasubtitulo node)
    {
        if(this._listasubtitulo_ != null)
        {
            this._listasubtitulo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listasubtitulo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._subtitulo_)
            + toString(this._listasubtitulo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._subtitulo_ == child)
        {
            this._subtitulo_ = null;
            return;
        }

        if(this._listasubtitulo_ == child)
        {
            this._listasubtitulo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._subtitulo_ == oldChild)
        {
            setSubtitulo((PSubtitulo) newChild);
            return;
        }

        if(this._listasubtitulo_ == oldChild)
        {
            setListasubtitulo((PListasubtitulo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
