/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.sableccCarpeta.node;

import srt.sableccCarpeta.analysis.*;

@SuppressWarnings("nls")
public final class ATiempo extends PTiempo
{
    private PHora1 _hora1_;
    private TFlecha _flecha_;
    private PHora2 _hora2_;

    public ATiempo()
    {
        // Constructor
    }

    public ATiempo(
        @SuppressWarnings("hiding") PHora1 _hora1_,
        @SuppressWarnings("hiding") TFlecha _flecha_,
        @SuppressWarnings("hiding") PHora2 _hora2_)
    {
        // Constructor
        setHora1(_hora1_);

        setFlecha(_flecha_);

        setHora2(_hora2_);

    }

    @Override
    public Object clone()
    {
        return new ATiempo(
            cloneNode(this._hora1_),
            cloneNode(this._flecha_),
            cloneNode(this._hora2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATiempo(this);
    }

    public PHora1 getHora1()
    {
        return this._hora1_;
    }

    public void setHora1(PHora1 node)
    {
        if(this._hora1_ != null)
        {
            this._hora1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hora1_ = node;
    }

    public TFlecha getFlecha()
    {
        return this._flecha_;
    }

    public void setFlecha(TFlecha node)
    {
        if(this._flecha_ != null)
        {
            this._flecha_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._flecha_ = node;
    }

    public PHora2 getHora2()
    {
        return this._hora2_;
    }

    public void setHora2(PHora2 node)
    {
        if(this._hora2_ != null)
        {
            this._hora2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hora2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._hora1_)
            + toString(this._flecha_)
            + toString(this._hora2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._hora1_ == child)
        {
            this._hora1_ = null;
            return;
        }

        if(this._flecha_ == child)
        {
            this._flecha_ = null;
            return;
        }

        if(this._hora2_ == child)
        {
            this._hora2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._hora1_ == oldChild)
        {
            setHora1((PHora1) newChild);
            return;
        }

        if(this._flecha_ == oldChild)
        {
            setFlecha((TFlecha) newChild);
            return;
        }

        if(this._hora2_ == oldChild)
        {
            setHora2((PHora2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
