/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.sableccCarpeta.node;

import srt.sableccCarpeta.analysis.*;

@SuppressWarnings("nls")
public final class AHora1 extends PHora1
{
    private PHora _hora_;
    private TDosp _d1_;
    private PMinutos _minutos_;
    private TDosp _d2_;
    private PSegundos _segundos_;
    private TComa _coma_;
    private PMiliseg _miliseg_;

    public AHora1()
    {
        // Constructor
    }

    public AHora1(
        @SuppressWarnings("hiding") PHora _hora_,
        @SuppressWarnings("hiding") TDosp _d1_,
        @SuppressWarnings("hiding") PMinutos _minutos_,
        @SuppressWarnings("hiding") TDosp _d2_,
        @SuppressWarnings("hiding") PSegundos _segundos_,
        @SuppressWarnings("hiding") TComa _coma_,
        @SuppressWarnings("hiding") PMiliseg _miliseg_)
    {
        // Constructor
        setHora(_hora_);

        setD1(_d1_);

        setMinutos(_minutos_);

        setD2(_d2_);

        setSegundos(_segundos_);

        setComa(_coma_);

        setMiliseg(_miliseg_);

    }

    @Override
    public Object clone()
    {
        return new AHora1(
            cloneNode(this._hora_),
            cloneNode(this._d1_),
            cloneNode(this._minutos_),
            cloneNode(this._d2_),
            cloneNode(this._segundos_),
            cloneNode(this._coma_),
            cloneNode(this._miliseg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHora1(this);
    }

    public PHora getHora()
    {
        return this._hora_;
    }

    public void setHora(PHora node)
    {
        if(this._hora_ != null)
        {
            this._hora_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hora_ = node;
    }

    public TDosp getD1()
    {
        return this._d1_;
    }

    public void setD1(TDosp node)
    {
        if(this._d1_ != null)
        {
            this._d1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._d1_ = node;
    }

    public PMinutos getMinutos()
    {
        return this._minutos_;
    }

    public void setMinutos(PMinutos node)
    {
        if(this._minutos_ != null)
        {
            this._minutos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minutos_ = node;
    }

    public TDosp getD2()
    {
        return this._d2_;
    }

    public void setD2(TDosp node)
    {
        if(this._d2_ != null)
        {
            this._d2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._d2_ = node;
    }

    public PSegundos getSegundos()
    {
        return this._segundos_;
    }

    public void setSegundos(PSegundos node)
    {
        if(this._segundos_ != null)
        {
            this._segundos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._segundos_ = node;
    }

    public TComa getComa()
    {
        return this._coma_;
    }

    public void setComa(TComa node)
    {
        if(this._coma_ != null)
        {
            this._coma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coma_ = node;
    }

    public PMiliseg getMiliseg()
    {
        return this._miliseg_;
    }

    public void setMiliseg(PMiliseg node)
    {
        if(this._miliseg_ != null)
        {
            this._miliseg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._miliseg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._hora_)
            + toString(this._d1_)
            + toString(this._minutos_)
            + toString(this._d2_)
            + toString(this._segundos_)
            + toString(this._coma_)
            + toString(this._miliseg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._hora_ == child)
        {
            this._hora_ = null;
            return;
        }

        if(this._d1_ == child)
        {
            this._d1_ = null;
            return;
        }

        if(this._minutos_ == child)
        {
            this._minutos_ = null;
            return;
        }

        if(this._d2_ == child)
        {
            this._d2_ = null;
            return;
        }

        if(this._segundos_ == child)
        {
            this._segundos_ = null;
            return;
        }

        if(this._coma_ == child)
        {
            this._coma_ = null;
            return;
        }

        if(this._miliseg_ == child)
        {
            this._miliseg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._hora_ == oldChild)
        {
            setHora((PHora) newChild);
            return;
        }

        if(this._d1_ == oldChild)
        {
            setD1((TDosp) newChild);
            return;
        }

        if(this._minutos_ == oldChild)
        {
            setMinutos((PMinutos) newChild);
            return;
        }

        if(this._d2_ == oldChild)
        {
            setD2((TDosp) newChild);
            return;
        }

        if(this._segundos_ == oldChild)
        {
            setSegundos((PSegundos) newChild);
            return;
        }

        if(this._coma_ == oldChild)
        {
            setComa((TComa) newChild);
            return;
        }

        if(this._miliseg_ == oldChild)
        {
            setMiliseg((PMiliseg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
