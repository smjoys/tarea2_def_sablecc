/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.sableccCarpeta.analysis;

import java.util.*;
import srt.sableccCarpeta.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtituloListasubtitulo(ASubtituloListasubtitulo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListsubtituloListasubtitulo(AListsubtituloListasubtitulo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtitulo(ASubtitulo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATiempo(ATiempo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHora1(AHora1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHora2(AHora2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHora(AHora node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinutos(AMinutos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASegundos(ASegundos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMiliseg(AMiliseg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubTextlist(ASubTextlist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATextlistTextlist(ATextlistTextlist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASub1Sub(ASub1Sub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASub2Sub(ASub2Sub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDigito(TDigito node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTexto(TTexto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComa(TComa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDosp(TDosp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFlecha(TFlecha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEtiqueta(TEtiqueta node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
